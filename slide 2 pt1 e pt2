Slide 2 â€“ Parte 2 (ComunicaÃ§Ã£o com Sockets em C)
ðŸ”¹ O que Ã© um Socket
Ponto de comunicaÃ§Ã£o entre dois processos (local ou pela rede).


Base para comunicaÃ§Ã£o cliente-servidor.


Funciona com protocolos:


TCP â†’ confiÃ¡vel, orientado Ã  conexÃ£o.


UDP â†’ rÃ¡pido, mas sem garantia de entrega.



Principais FunÃ§Ãµes em C (Winsock â€“ Windows)
WSAStartup() â†’ inicializa biblioteca.


WSACleanup() â†’ finaliza biblioteca.


socket() â†’ cria um socket.


closesocket() â†’ fecha o socket.


bind() â†’ associa IP/porta ao socket.


listen() â†’ coloca servidor em modo de escuta.


accept() â†’ aceita conexÃ£o do cliente.


connect() â†’ conecta cliente ao servidor.


send() / recv() â†’ enviar/receber dados.


sendto() / recvfrom() â†’ usado em UDP.



 Fluxo Cliente-Servidor
Servidor: inicializa Winsock â†’ cria socket â†’ bind (IP/porta) â†’ listen â†’ accept â†’ troca dados â†’ fecha.
 Cliente: inicializa Winsock â†’ cria socket â†’ connect (ao servidor) â†’ send/recv â†’ fecha.

 Exemplo prÃ¡tico â€“ Cliente simples
SOCKET clientSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
connect(clientSocket, ...);
send(clientSocket, "Ola", 3, 0);
closesocket(clientSocket);

 Exemplo prÃ¡tico â€“ Servidor simples
SOCKET sock = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
bind(sock, ...);
listen(sock, SOMAXCONN);
SOCKET client = accept(sock, NULL, NULL);
recv(client, buffer, sizeof(buffer), 0);
closesocket(sock);

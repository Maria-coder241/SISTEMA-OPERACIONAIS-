
1. Condi√ß√µes para Armazenamento a Longo Prazo
Deve guardar grande volume de informa√ß√£o.


Dados precisam sobreviver ao t√©rmino do processo.


M√∫ltiplos processos devem acessar ao mesmo tempo.


2. Arquivos
Disco = sequ√™ncia linear de blocos.


Quest√µes:


Como encontrar informa√ß√£o?


Como proteger dados?


Como saber se blocos est√£o livres?


Fun√ß√µes do SO: localizar, proteger, controlar espa√ßo livre.


Estrutura
Nomea√ß√£o ‚Üí nome √∫nico para identificar.


Estrutura ‚Üí sequ√™ncia de bytes, registros, √°rvore etc.


Tipos ‚Üí texto, bin√°rio, execut√°vel.


Atributos ‚Üí nome, tamanho, dono, permiss√µes, datas.


Opera√ß√µes (chamadas de sistema)
Create, Delete ‚Üí criar/apagar arquivo.


Open, Close ‚Üí abrir/fechar arquivo.


Read, Write ‚Üí ler/escrever.


Append ‚Üí anexar.


Seek ‚Üí mover ponteiro.


Get/Set Attributes ‚Üí consultar ou alterar atributos.


Rename ‚Üí renomear.


üîπ Exemplo pr√°tico (Unix/Linux)
# criar arquivo
touch arquivo.txt
# escrever no arquivo
echo "teste" > arquivo.txt
# ler arquivo
cat arquivo.txt

3. Diret√≥rios
Hier√°rquicos ‚Üí organizam arquivos em √°rvore.


Nomes de caminho: absoluto (/usr/bin/ls) e relativo (../pasta/arquivo).


Opera√ß√µes (chamadas de sistema)
Create, Delete ‚Üí criar/apagar diret√≥rio.


Opendir, Closedir ‚Üí abrir/fechar.


Readdir ‚Üí listar arquivos.


Rename ‚Üí renomear.


Link ‚Üí criar link.


üîπ Exemplo pr√°tico (Linux)
mkdir docs       # cria diret√≥rio
ls docs          # lista
rmdir docs       # remove diret√≥rio vazio


4. Implementa√ß√£o de Sistemas de Arquivos
Perguntas principais:
Como organizar arquivos no disco?


Como controlar espa√ßos livres/ocupados?


Como implementar diret√≥rios?


Como lidar com arquivos compartilhados?


M√©todos de aloca√ß√£o
Cont√≠gua


Arquivo ocupa blocos seguidos.


F√°cil leitura, mas gera fragmenta√ß√£o interna e externa.


Lista encadeada


Cada bloco aponta para o pr√≥ximo.


Sem fragmenta√ß√£o externa, mas leitura √© lenta.


Lista encadeada com tabela em mem√≥ria (FAT)


Tabela na RAM armazena ponteiros.


Usada no MS-DOS.


Problema: pode ficar muito grande.


I-nodes (index nodes)


Estrutura que guarda atributos e endere√ßos de blocos.


S√≥ precisa estar em mem√≥ria se o arquivo estiver aberto.


Usado em Unix/Linux.


üîπ Exemplo pr√°tico (Linux ‚Äì verificar inode)
ls -i arquivo.txt   # mostra n√∫mero do i-node


5. Arquivos Compartilhados
Podem ser usados por m√∫ltiplos usu√°rios/processos.


Necess√°ria exclus√£o m√∫tua para evitar conflitos.



6. Exemplos de Sistemas de Arquivos
FAT (File Allocation Table) ‚Üí antigo Windows/MS-DOS.


NTFS (New Technology File System) ‚Üí Windows moderno (suporta criptografia, permiss√µes).


ext / ext2 / ext3 / ext4 ‚Üí Linux.


HFS+ ‚Üí MacOS antigo.


NFS (Network File System) ‚Üí permite acesso remoto em rede.


BFS, EFS ‚Üí usados em sistemas espec√≠ficos.
